name: Kepler Maven Build

on:
  workflow_dispatch:

jobs:
  BuildAndPack:
    runs-on: ubuntu-latest
  
    steps:
    - name: Code checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Get version from pom and Update
      run: |
        cd myapp
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        new_version=$(echo "$current_version" | awk -F. '{print $1 "." $2 "." ($3 + 1)}')
        echo "New version: $new_version"
        mvn versions:set -DnewVersion=$new_version
        mvn versions:commit
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Build and compile
      run: mvn -B package --file ./myapp/pom.xml

    - name: Create artifact
      uses: actions/upload-artifact@v4
      with:
        name: myapp-build-artifact
        path: myapp/target/*.jar

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: myapp-build-artifact
        path: ./downloaded_artifact

    - name: Build docker
      run: |
        docker build \
          --build-arg JAR_FILE=downloaded_artifact/*.jar \
          -t ronraifer/reporon:${{ env.new_version }} .

    - name: Push docker
      run: |
        echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_MAIL }}" --password-stdin
        docker push ronraifer/reporon:${{ env.new_version }}

    - name: Run docker
      run: |
        docker run -d -p 8080:8080 ronraifer/reporon:${{ env.new_version }}
        
    - name: Change version on POM
      run: |
        git config --global user.email "version_update@ron.com"
        git config --global user.name "Version Update"
        git add ./myapp/pom.xml
        git commit -m "Build ${{ env.new_version }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

